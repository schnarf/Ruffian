For loop
==================================
Regular old C for loop:

	for( int i=0; i<len; ++i )

Range for loop:
	foreach( int i; begin : end ) // begin, begin+1, ..., end-1

Note that begin and end are evaluated only once at the beginning of the loop.

TODO: Backwards loops

TODO: Don't use a comma? Will that make expression parsing hard?
Do we need a comma operator? If not, using a comma here is fine.

TODO: Difference between for and foreach? It's easier to parse
when they have different names, but given the different syntax,
it's possible to disambiguate with some lookahead. Tradeoff
simplicity of parsing with simplicity of code.